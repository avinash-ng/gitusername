{"ast":null,"code":"var _jsxFileName = \"/home/avinash/scale-builders/tailorbird_web/src/components/organisms/RoomCollectionCard.tsx\";\nimport React, { useState } from 'react';\nimport { CardMedia, makeStyles, Card, CardContent, Typography, createMuiTheme, ThemeProvider, Grid } from '@material-ui/core';\nimport checkcircle from '../../assets/check-circle.png';\n;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    borderRadius: '4px'\n  },\n  title: {\n    textAlign: 'center'\n  },\n  image: {\n    objectFit: 'contain',\n    width: '100%',\n    minWidth: 345,\n    height: 172,\n    borderRadius: '4px'\n  },\n  selected: {\n    position: 'absolute',\n    zIndex: 5,\n    marginTop: 20,\n    marginLeft: 290\n  }\n}));\nconst theme = createMuiTheme({\n  overrides: {\n    MuiTypography: {\n      root: {\n        fontSize: '18px',\n        letterSpacing: '0.5px',\n        fontFamily: 'SFProDisplay'\n      }\n    },\n    MuiCardContent: {\n      root: {\n        '&:last-child': {\n          paddingBottom: 12\n        }\n      }\n    }\n  }\n});\n\nconst RoomCollectionCard = ({\n  cardName,\n  cardImage,\n  aboutCard,\n  maxWidth\n}) => {\n  const classes = useStyles();\n  const [raised, setRaised] = useState(false);\n  const [isClicked, setisClicked] = useState(false);\n\n  const raiseHandler = () => {\n    setRaised(!raised);\n  };\n\n  const clickHandler = () => {\n    setisClicked(true);\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Grid item md={4} lg={3}>\n    React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      onClick: clickHandler,\n      raised: raised,\n      onMouseOver: raiseHandler,\n      onMouseOut: raiseHandler,\n      className: classes.root,\n      style: {\n        maxWidth: maxWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, isClicked && /*#__PURE__*/React.createElement(\"img\", {\n      src: checkcircle,\n      className: classes.selected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 27\n      }\n    }), cardImage && /*#__PURE__*/React.createElement(CardMedia, {\n      className: classes.image,\n      image: cardImage // {...cardImage !==undefined ? (image=={cardImage}) :' '}\n      ,\n      title: cardName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, cardImage !== undefined ? aboutCard !== undefined ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      justify: \"flex-start\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 65\n      }\n    }, cardName)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 65\n      }\n    }, aboutCard))) : /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      className: classes.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 42\n      }\n    }, cardName) : /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 46\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 49\n      }\n    }, cardName)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 49\n      }\n    }, aboutCard)))))) // </Grid>\n\n  );\n};\n\nexport default RoomCollectionCard;","map":{"version":3,"sources":["/home/avinash/scale-builders/tailorbird_web/src/components/organisms/RoomCollectionCard.tsx"],"names":["React","useState","CardMedia","makeStyles","Card","CardContent","Typography","createMuiTheme","ThemeProvider","Grid","checkcircle","useStyles","theme","root","borderRadius","title","textAlign","image","objectFit","width","minWidth","height","selected","position","zIndex","marginTop","marginLeft","overrides","MuiTypography","fontSize","letterSpacing","fontFamily","MuiCardContent","paddingBottom","RoomCollectionCard","cardName","cardImage","aboutCard","maxWidth","classes","raised","setRaised","isClicked","setisClicked","raiseHandler","clickHandler","undefined"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { CardMedia, makeStyles, Card, CardContent, Typography, createMuiTheme, ThemeProvider, Grid, Icon } from '@material-ui/core'\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport { maxHeaderSize } from 'http';\nimport checkcircle from '../../assets/check-circle.png';\nexport interface ICardProps {\n    cardImage?: string\n    cardName: string\n    aboutCard?: string\n    maxWidth: number\n};\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        borderRadius: '4px',\n    },\n    title: {\n        textAlign: 'center'\n    },\n    image: {\n        objectFit: 'contain',\n        width: '100%',\n        minWidth: 345,\n        height: 172,\n        borderRadius: '4px',\n    },\n    selected: {\n        position: 'absolute',\n        zIndex: 5,\n        marginTop: 20,\n        marginLeft: 290\n\n    }\n}));\nconst theme = createMuiTheme({\n    overrides: {\n        MuiTypography: {\n            root: {\n                fontSize: '18px',\n                letterSpacing: '0.5px',\n                fontFamily: 'SFProDisplay'\n            }\n        },\n        MuiCardContent: {\n\n            root: {\n                '&:last-child': {\n                    paddingBottom: 12\n                }\n            }\n\n        }\n    }\n});\nconst RoomCollectionCard: React.FC<ICardProps> = ({ cardName, cardImage, aboutCard, maxWidth }) => {\n    const classes = useStyles()\n    const [raised, setRaised] = useState<boolean>(false);\n    const [isClicked, setisClicked] = useState<boolean>(false);\n    const raiseHandler = () => {\n        setRaised(!raised)\n    }\n    const clickHandler = () => {\n        setisClicked(true)\n    }\n    return (\n        // <Grid item md={4} lg={3}>\n        <ThemeProvider theme={theme}>\n            <Card onClick= {clickHandler} raised={raised} onMouseOver={raiseHandler} onMouseOut={raiseHandler} className={classes.root} style={{ maxWidth: maxWidth }}>\n            {isClicked && <img src={checkcircle} className={classes.selected}/>}\n                {cardImage && \n                <CardMedia\n                    className={classes.image}\n                    image={cardImage}\n                    // {...cardImage !==undefined ? (image=={cardImage}) :' '}\n                    title={cardName}\n                >\n               \n                </CardMedia>}\n                <CardContent>\n                    {/* {cardImage !== undefined ? (aboutCard!==undefined ?(<Grid container direction=\"column\" justify=\"flex-start\" spacing={1}>\n                        <Grid item>\n                            <Typography variant=\"h6\">{cardName}</Typography>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant=\"body1\">{aboutCard}</Typography>\n                        </Grid>\n                    </Grid>)\n                        : (<Typography variant=\"subtitle1\" className={classes.title}>{cardName}</Typography>))\n\n                    :  (<Grid container direction=\"column\" justify=\"flex-start\" spacing={1}>\n                    <Grid item>\n                        <Typography variant=\"h5\">{cardName}</Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"body1\">{aboutCard}</Typography>\n                    </Grid>\n                </Grid>)} */}\n                 {cardImage !== undefined ? (aboutCard !== undefined ? (<Grid container direction=\"column\" justify=\"flex-start\" spacing={1}>\n                                                            <Grid item>\n                                                                <Typography variant=\"h6\">{cardName}</Typography>\n                                                            </Grid>\n                                                            <Grid item>\n                                                                <Typography variant=\"body1\">{aboutCard}</Typography>\n                                                            </Grid>\n                                                        </Grid>)\n                                        :<Typography variant=\"subtitle1\" className={classes.title}>{cardName}</Typography>)\n                                        : (<Grid container spacing={1} direction=\"column\">\n                                             <Grid item>\n                                                <Typography variant=\"h5\">{cardName}</Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography variant=\"body1\">{aboutCard}</Typography>\n                                            </Grid>\n                                        </Grid>)}\n                </CardContent>\n            </Card>\n        </ThemeProvider>\n        // </Grid>\n    )\n}\nexport default RoomCollectionCard"]},"metadata":{},"sourceType":"module"}